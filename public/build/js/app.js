function initApp(){menu(),validateScreen(),newTask(),viewTask(),filter()}function createAlert(e,t,a){const n=document.createElement("DIV");n.classList.add("alerta",t),n.textContent=e;const s=document.querySelector(".contenedor-alertas");s&&s.remove();const o=document.createElement("DIV");o.classList.add("contenedor-alertas"),o.appendChild(n),a.appendChild(o),setTimeout((()=>{cleanAlerts()}),5e3)}function cleanAlerts(){document.querySelectorAll(".contenedor-alertas").forEach((e=>e.remove()))}function menu(){const e=document.querySelector(".bar"),t=document.querySelector(".slide");e.addEventListener("click",(()=>{t.classList.toggle("active")}))}function validateScreen(){const e=document.querySelector(".slide"),t=document.getElementById("form-task");window.innerWidth>765&&(e.classList.remove("active"),t&&t.classList.remove("showTaskCreate"))}function newTask(){const e=document.getElementById("newTask"),t=document.getElementById("form-task");let a="";e&&e.addEventListener("click",(()=>{t.classList.add("showTaskCreate")}));const n=document.getElementById("task");n&&n.addEventListener("input",(e=>{a=e.target.value.trim()}));const s=document.getElementById("taskCancel");s&&s.addEventListener("click",(e=>{e.preventDefault(),t.classList.remove("showTaskCreate")}));const o=document.getElementById("projectId")?.value;document.getElementById("taskCreate").addEventListener("click",(()=>{createTask(a,o)}))}async function createTask(e,t){if(e)try{const a="http://localhost:3000/api/task",n=new FormData;n.append("name",e),n.append("state",0),n.append("projectId",t);const s=await fetch(a,{method:"POST",body:n});if(await s.json()){viewTask();document.getElementById("form-task").classList.remove("showTaskCreate");document.getElementById("task").value="",createAlert("Tarea Creada Correctamente","exito",document.querySelector(".dashboard"))}}catch(e){}else createAlert("El nombre es obligatorio","error",document.querySelector(".form-task"))}async function viewTask(){try{const e="http://localhost:3000/api/task",t=await fetch(e),a=await t.json(),{tareas:n}=a,s=document.getElementById("task");if(0===n.length){const e=document.createElement("P");return e.classList.add("no-task"),e.textContent="No Hay Tareas Aún",void s.appendChild(e)}const o=document.querySelector(".no-task"),c=document.getElementById("task-input");o&&o.remove();const d=document.querySelector(".task-containter");d&&d.remove();const r=createTaskStructure(n);s.appendChild(r),c.value="";const l=document.querySelectorAll("#state"),i=document.querySelectorAll("#delete"),u=document.querySelectorAll("#task-name");l.forEach((e=>{e.addEventListener("click",(()=>{changeState(parseInt(e.dataset.task))}))})),i.forEach((e=>{e.addEventListener("click",(()=>{confirmDeleteTask(parseInt(e.dataset.task))}))})),u.forEach((e=>{const t=e.dataset.id;e.addEventListener("dblclick",(()=>{updateTask(t)}))}))}catch(e){console.log("Error: ",e)}}async function changeState(e){const t=document.querySelector(`[data-task="${e}"]`),a=t.parentNode.parentNode;"0"===(await findTask(e)).state?(t.textContent="Pendiente",t.classList.add("pending"),t.classList.remove("complete"),a.dataset.state="0"):(t.textContent="Completada",t.classList.add("complete"),t.classList.remove("pending"),a.dataset.state="1")}function createTaskStructure(e){const t=document.createElement("DIV");return t.classList.add("task-containter"),e.forEach((e=>{let{id:a,name:n,state:s}=e;s=parseInt(s);let o=`\n      <div data-state="${s}" class="task-item">\n        <h3 id="task-name" data-id="${a}" class="task-name center">${n}</h3>\n        <div class="task-actions">\n          <button data-task="${a}" id="state" class="state ${s?"complete":"pending"}">${s?"Completada":"Pendiente"}</button>\n          <button data-task="${a}" id="delete" class="state danger">Eliminar</button>\n        </div>\n      </div>\n`;t.innerHTML+=o})),t}async function findTask(e){const t=`http://localhost:3000/api/task/find?id=${e}`,a=await fetch(t);return await a.json()}function confirmDeleteTask(e){Swal.fire({title:"¿Estas seguro de eliminar esta tarea?",showCancelButton:!0,confirmButtonText:"Si",cancelButtonText:"No"}).then((t=>{t.isConfirmed&&deleteTarea(e)}))}async function deleteTarea(e){try{const t=`http://localhost:3000/api/task/delete?id=${e}`,a=await fetch(t);await a.text()&&viewTask()}catch(e){console.log("Error: ",e)}}function updateTask(e){const t=document.getElementById("update-task");t.classList.add("showTaskCreate");let a="";const n=document.getElementById("task-input-update");n&&n.addEventListener("input",(e=>{a=e.target.value.trim()}));const s=document.getElementById("taskCancelUpdate");s&&s.addEventListener("click",(e=>{e.preventDefault(),t.classList.remove("showTaskCreate"),n.value=""}));const o=document.querySelector("#taskUpdate");o&&(o.onclick=function(){updateTaskValue(a,e)})}async function updateTaskValue(e,t){if(e)try{const a="http://localhost:3000/api/task/update",n=new FormData;n.append("name",e),n.append("id",t);const s=await fetch(a,{method:"POST",body:n});if(await s.json()){document.getElementById("update-task").classList.remove("showTaskCreate");document.getElementById("task").value="",createAlert("Tarea Actualizada Correctamente","exito",document.querySelector(".dashboard"))}viewTask()}catch(e){console.log("Error: ",e)}else createAlert("El nombre es obligatorio","error",document.querySelector("#update-task"))}function filter(){document.querySelectorAll(".input-radio input").forEach((e=>{e.addEventListener("input",(()=>{const t=parseInt(e.dataset.filter);if(2!==t){if(0===t){const e=document.querySelectorAll('[data-state="1"]'),t=document.querySelectorAll('[data-state="0"]');return e.forEach((e=>e.classList.add("hidden-task"))),void t.forEach((e=>e.classList.remove("hidden-task")))}if(1===t){const e=document.querySelectorAll('[data-state="1"]');return document.querySelectorAll('[data-state="0"]').forEach((e=>e.classList.add("hidden-task"))),void e.forEach((e=>e.classList.remove("hidden-task")))}}else viewTask()}))}))}document.addEventListener("DOMContentLoaded",(function(){initApp()})),window.onresize=validateScreen;